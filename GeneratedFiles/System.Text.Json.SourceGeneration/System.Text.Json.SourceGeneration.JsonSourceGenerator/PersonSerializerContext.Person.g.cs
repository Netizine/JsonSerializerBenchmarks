// <auto-generated/>
#nullable enable

namespace JsonSerializerBenchmarks
{
    public partial class PersonSerializerContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonSerializerBenchmarks.Person>? _Person;
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonSerializerBenchmarks.Person> Person
        {
            get
            {
                if (_Person == null)
                {
                    global::System.Text.Json.Serialization.JsonConverter? customConverter;
                    if (Options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(typeof(global::JsonSerializerBenchmarks.Person))) != null)
                    {
                        _Person = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::JsonSerializerBenchmarks.Person>(Options, customConverter);
                    }
                    else
                    {
                        global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonSerializerBenchmarks.Person> objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonSerializerBenchmarks.Person>()
                        {
                            ObjectCreator = static () => new global::JsonSerializerBenchmarks.Person(),
                            ObjectWithParameterizedConstructorCreator = null,
                            PropertyMetadataInitializer = PersonPropInit,
                            ConstructorParameterMetadataInitializer = null,
                            NumberHandling = default,
                            SerializeHandler = null
                        };
            
                        _Person = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::JsonSerializerBenchmarks.Person>(Options, objectInfo);
                    }
                }
        
                return _Person;
            }
        }
        
        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] PersonPropInit(global::System.Text.Json.Serialization.JsonSerializerContext context)
        {
            global::JsonSerializerBenchmarks.PersonSerializerContext jsonContext = (global::JsonSerializerBenchmarks.PersonSerializerContext)context;
            global::System.Text.Json.JsonSerializerOptions options = context.Options;
        
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[5];
        
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Int64> info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Int64>()
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::JsonSerializerBenchmarks.Person),
                PropertyTypeInfo = jsonContext.Int64,
                Converter = null,
                Getter = static (obj) => ((global::JsonSerializerBenchmarks.Person)obj).Id,
                Setter = static (obj, value) => ((global::JsonSerializerBenchmarks.Person)obj).Id = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = default,
                PropertyName = "Id",
                JsonPropertyName = null
            };
        
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Int64>(options, info0);
            
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::JsonSerializerBenchmarks.Person),
                PropertyTypeInfo = jsonContext.String,
                Converter = null,
                Getter = static (obj) => ((global::JsonSerializerBenchmarks.Person)obj).FirstName,
                Setter = static (obj, value) => ((global::JsonSerializerBenchmarks.Person)obj).FirstName = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = default,
                PropertyName = "FirstName",
                JsonPropertyName = null
            };
        
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info1);
            
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::JsonSerializerBenchmarks.Person),
                PropertyTypeInfo = jsonContext.String,
                Converter = null,
                Getter = static (obj) => ((global::JsonSerializerBenchmarks.Person)obj).Surname,
                Setter = static (obj, value) => ((global::JsonSerializerBenchmarks.Person)obj).Surname = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = default,
                PropertyName = "Surname",
                JsonPropertyName = null
            };
        
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info2);
            
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::JsonSerializerBenchmarks.Person),
                PropertyTypeInfo = jsonContext.String,
                Converter = null,
                Getter = static (obj) => ((global::JsonSerializerBenchmarks.Person)obj).Email,
                Setter = static (obj, value) => ((global::JsonSerializerBenchmarks.Person)obj).Email = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = default,
                PropertyName = "Email",
                JsonPropertyName = null
            };
        
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info3);
            
            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::JsonSerializerBenchmarks.Person),
                PropertyTypeInfo = jsonContext.String,
                Converter = null,
                Getter = static (obj) => ((global::JsonSerializerBenchmarks.Person)obj).Phone,
                Setter = static (obj, value) => ((global::JsonSerializerBenchmarks.Person)obj).Phone = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = default,
                PropertyName = "Phone",
                JsonPropertyName = null
            };
        
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info4);
            
            return properties;
        }
    }
}
